{
"version":3,
"file":"kluez.js",
"sourceRoot":"",
"sources":["file:////Users/matthijskamstra/Documents/GIT/kluez-gantt/src/MainKluez.hx","file:////usr/local/lib/haxe/std/haxe/iterators/ArrayIterator.hx"],
"sourcesContent":["package;\n\nimport kluez.KlzGrid;\nimport kluez.CreateTable;\nimport utils.Convert;\nimport kluez.CombiElement;\nimport const.ClassNames;\nimport utils.MathUtil;\nimport kluez.El;\nimport const.Colors;\nimport js.html.Element;\nimport kluez.ResizeElement;\nimport kluez.DragElement;\nimport kluez.CreateElement;\nimport kluez.DynamicStyle;\nimport js.html.DivElement;\nimport js.Browser.*;\n\nusing hxColorToolkit.ColorToolkit;\nusing StringTools;\n\nclass MainKluez {\n\tpublic function new() {\n\t\ttrace('MainKluez');\n\n\t\tcreateTable(100, 1000);\n\t}\n\n\tpublic function createTable(xTotal, yTotal) {\n\t\tvar table0 = cast document.getElementById('container-gantt-kluez').getElementsByClassName('pattern')[0];\n\n\t\tvar colGroup = '';\n\t\tvar row = '';\n\n\t\tfor (y in 0...yTotal) {\n\t\t\tcolGroup = '<colgroup>';\n\t\t\trow += '<tr>';\n\t\t\t// your code\n\t\t\tfor (x in 0...xTotal) {\n\t\t\t\tcolGroup += '<col>';\n\t\t\t\trow += '<td><span class=\"table-cell\"></span></td>';\n\t\t\t}\n\t\t\tcolGroup += '<colgroup>';\n\t\t\trow += '</tr>';\n\t\t}\n\t\tvar t = '<table class=\"table-kluez\">\\n${colGroup}\\n${row}</table>';\n\n\t\tvar frag = document.createRange().createContextualFragment(t);\n\t\ttable0.appendChild(frag);\n\t}\n\n\tstatic public function main() {\n\t\tvar app = new MainKluez();\n\t}\n}\n","/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n"],
"names":[],
"mappings":";gBAsBuB;AAAA,CACrB,mCAAO;AADc,CAGrB,iBAAY,IAAK;AAHI;iBA6BQ,WAC7B;AAAA,WAAU;AAAV;;cAxB2C;AAAA,EAC3C,aAAa,AAAK,+BAAyB,gDAAgD,WAAU;AAD1D,EAG3C,eAAe;AAH4B,EAI3C,UAAU;AAJiC,EAMjC;AANiC,EAM7B;AAN6B,EAM3C,KAAK,CAAK,KAAI,KAAd;AAAA,GAAU;AAAV,GACC,WAAY;AADb,GAEC,OAAQ;AAFT,GAIW;AAJX,GAIe;AAJf,GAIC,KAAK,CAAK,MAAI,KAAd;AAAA,IAAU;AAAV,IACC,YAAa;AADd,IAEC,OAAQ;AAFT;AAJD,GAQC,YAAa;AARd,GASC,OAAQ;AATT;AAN2C,EAiB3C,QAAS,oCAA8B,WAAS,OAAG,MAAI;AAjBZ,EAmB3C,WAAW,uDAAgD;AAnBhB,EAoB3C,mBAAmB;AApBwB;;mCCMpC,gBAPT;AAAA,CAEmB,AAAlB,eAAkB;AAFnB,CASE,aAAa;AATf;;UAgB2B,WACzB;AAAA,SAAO,eAAU;AAAjB;QAOsB,WACtB;AAAA,SAAO,WAAM;AAAb;;;;;"
}